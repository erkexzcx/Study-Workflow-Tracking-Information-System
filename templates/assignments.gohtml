<section class="content-header">
    <h1>Assignments</h1>
    <ol class="breadcrumb">
        <li><i class="fa fa-home"></i> Home</li>
        <li><i class="fa fa-check-square-o"></i> Assignments</li>
    </ol>
</section>

<section class="content container-fluid">

    <!----------------- Assignments table  ----------------->
    <div class="row">
        <div class="col-md-12">
            <div class="box box-info">
                <div class="box-body">
                    <table id="assignments_table"
                        class="table table-striped table-bordered table-hover table-condensed">
                        <thead>
                            <tr>
                                <th style="white-space: nowrap">Title</th>
                                <th style="white-space: nowrap">Date</th>
                                <th style="white-space: nowrap">Semester</th>
                                <th style="white-space: nowrap">Status</th>
                                <th style="white-space: nowrap">Subject</th>
                                <th style="white-space: nowrap">Comment</th>
                                {{if .admin}}<th style="white-space: nowrap">Actions</th>{{end}}
                            </tr>
                        </thead>
                        <tbody>


                            {{range .assignments}}
                                <tr>
                                
                                    <td style="min-width: 200px">
                                        {{if .SemesterActive}}
                                            <i class="fa fa-circle" style="color: lightgreen"></i>
                                        {{else}}
                                            <i class="fa fa-circle" style="color: red"></i>
                                        {{end}}
                                        {{.AssignmentTitle}} {{if .New}}<small class="removeme label label-info">new!</small>{{end}}
                                    </td>
                                    
                                    <td style="white-space: nowrap"> {{.Until}}
                                        {{if lt .DaysRemaining 0}}
                                        <span class="label label-default">{{.DaysRemaining | negative}} days ago</span>
                                        {{else if eq .DaysRemaining 0}}
                                        <span class="label label-danger">Today!</span>
                                        {{else if eq .DaysRemaining 1}}
                                        <span class="label label-danger">Tomorrow!</span>
                                        {{else if le .DaysRemaining 7}}
                                        <span class="label label-danger">In {{.DaysRemaining}} days</span>
                                        {{else if le .DaysRemaining 30}}
                                        <span class="label label-warning">In {{.DaysRemaining}} days</span>
                                        {{else}}
                                        <span class="label label-info">In {{.DaysRemaining}} days</span>
                                        {{end}}
                                    </td>
                                    
                                    <td style="white-space: nowrap">{{.SemesterTitle}}</td>
                                    
                                    <td style="white-space: nowrap">
                                        {{if eq .AssignmentStatus 0}}
                                            <button class="btn btn-xs btn-flat label-danger status-btn" item-id="{{.AssignmentID}}">Not started</button>
                                        {{else if eq .AssignmentStatus 1}}
                                            <button class="btn btn-xs btn-flat label-warning status-btn" item-id="{{.AssignmentID}}">In progress</button>
                                        {{else if eq .AssignmentStatus 2}}
                                            <button class="btn btn-xs btn-flat label-info status-btn" item-id="{{.AssignmentID}}">Pending</button>
                                        {{else if eq .AssignmentStatus 3}}
                                            <button class="btn btn-xs btn-flat label-success status-btn" item-id="{{.AssignmentID}}">Completed</button>
                                        {{end}}
                                    </td>
                                    
                                    <td style="min-width: 200px">
                                        {{if eq .SubjectURL ""}}{{.SubjectTitle}}{{else}}<a href="{{.SubjectURL}}" target="_blank">{{.SubjectTitle}}</a>{{end}} (<small>{{printf "%.1s" .TeacherName}}. {{.TeacherSurname}}</small>)
                                    </td>
                                    
                                    <td style="min-width: 200px">{{.Description}}</td>
                                    
                                    {{if $.admin}}
                                        <td style="white-space: nowrap">
                                            <button class="btn btn-default btn-xs btn-flat edit-btn" title="Edit subject" item-id="{{.AssignmentID}}">Edit</button>
                                            <button class="btn btn-danger btn-xs btn-flat delete-btn" title="Delete subject" item-id="{{.AssignmentID}}">Delete</button>
                                        </td>
                                    {{end}}
                                    
                                </tr>
                            {{end}}


                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <!----------------- End of Assignments table ----------------->

    <!----------------- New assignment modal ----------------->
    <form action="/assignments" method="post" id="new-form">
        <div class="modal" id="new-modal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">Create new assignment</h4>
                    </div>

                    <div class="modal-body loaded">

                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="title">Title</label>
                                    <input type="text" class="form-control" id="title" name="title"
                                        placeholder="Enter subject's title...">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="until">Until</label>
                                    <input type="text" class="form-control datepicker" id="until" name="until"
                                        placeholder="  Click to select until date...">
                                </div>
                            </div>
                        </div>

                        {{if eq .activeSubjectsExist false}}
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="callout callout-warning">
                                    <h4>Warning</h4>
                                    <p>There are no subjects available for current semester. You might want to <a
                                            href="#" onclick="$('[href=&quot;#subjects&quot;]:first').click();">create some</a>!</p>
                                </div>
                            </div>
                        </div>
                        {{end}}

                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="subject">Subject</label>
                                    <select class="form-control" id="subject" name="subject">
                                        {{range .subjects}}
                                        <option value="{{.ID}}">{{if .Active}}(Active) {{end}}{{.Title}}</option>
                                        {{end}}
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label>Description</label>
                                    <textarea type="text" class="form-control single-line-textarea" rows="4"
                                        style="resize: vertical;" id="description" name="description"
                                        placeholder="(OPTIONAL) Enter description..."></textarea>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="modal-footer">
                        <button type="Submit" class="btn btn-primary">Create</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <!----------------- End of New assignment modal ----------------->

    <!----------------- Edit assignment modal ----------------->
    <form action="" method="put" id="edit-form">
        <div class="modal" id="edit-modal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title"></h4>
                    </div>

                    <div class="modal-body loaded">

                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="title">Title</label>
                                    <input type="text" class="form-control" id="title" name="title"
                                        placeholder="Enter subject's title...">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="until">Until</label>
                                    <input type="text" class="form-control datepicker" id="until" name="until"
                                        placeholder="  Click to select until date...">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="subject">Subject</label>
                                    <select class="form-control" id="subject" name="subject">
                                        {{range .subjects}}
                                        <option value="{{.ID}}">{{if .Active}}(Active) {{end}}{{.Title}}</option>
                                        {{end}}
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label>Description</label>
                                    <textarea type="text" class="form-control single-line-textarea" rows="4"
                                        style="resize: vertical;" id="description" name="description"
                                        placeholder="(OPTIONAL) Enter description..."></textarea>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <small>
                                    Updated by <b><font id="updated_by"></font></b><BR>
                                    Updated on <b><font id="updated_on"></font></b><BR>
                                </small>
                            </div>
                            <div class="col-md-6">
                                <small>
                                    Created by <b><font id="created_by"></font></b><BR>
                                    Created on <b><font id="created_on"></font></b><BR>
                                </small>
                            </div>
                        </div>

                    </div>

                    <div class="modal-footer">
                        <button type="Submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <!----------------- End of Edit assignment modal ----------------->

    <!----------------- Delete modal ----------------->
    <form action="" method="delete" id="delete-form">
        <div class="modal modal-danger" id="delete-modal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">Confirmation required</h4>
                    </div>

                    <div class="modal-body loaded" style="display: none"></div>

                    <div class="modal-footer">
                        <button type="Submit" class="btn btn-primary">Delete</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <!----------------- End of Delete modal ----------------->

<!----------------- Assignment status modal ----------------->
<form action="" method="post" id="status-form">
    <div class="modal" id="status-modal">
        <div class="modal-dialog">
            <div class="modal-content ajax-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title"></h4>
                </div>

                <div class="modal-body loaded" style="display: none">

                    <div class="row">
                        <div class="col-sm-12">
                            <div class="callout callout-info">
                                <p>These are personal settings and are only visible & managed by you!</p>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label for="note">Personal note</label>
                                <textarea type="text" class="form-control single-line-textarea" rows="4"
                                    style="resize: vertical;" id="note" name="note"
                                    placeholder="(OPTIONAL) Enter personal note...">
                                </textarea>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <label>Personal status</label>
                            <div class="form-group">
                                <p><input type="radio" name="status" value="0" class="minimal"> Not started</p>
                                <p><input type="radio" name="status" value="1" class="minimal"> In progress</p>
                                <p><input type="radio" name="status" value="2" class="minimal"> Pending</p>
                                <p><input type="radio" name="status" value="3" class="minimal"> Completed</p>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <small>Updated on: <b>
                                    <font id="updated_on"></font>
                                </b><BR></small>
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="Submit" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</form>
<!----------------- End of Assignment status modal ----------------->

</section>

<script>

    /************* 'Datatables' functionality *************/
    var table = $('#assignments_table').DataTable({
        // Make it really responsive, so you don't have to reboot when resizing page:
        autoWidth: false,
        // Make it responsive (mobile-friendly):
        responsive: {
            details: {
                display: $.fn.dataTable.Responsive.display.childRowImmediate,
                type: ''
            }
        },
        // Disable initial sort (it's done by database query anyway):
        sorting: [],
        // Customize about of records to show per page:
        "lengthMenu": [
            [25, 50, 100, -1],
            [25, 50, 100, "All"]
        ],
        // Disable sorting on last column:
        "columnDefs": [
            {{if .admin}}
            {
                // Disable sorting on last column:
                "targets": [-1],
                "sortable": false
            },
            {{end}}
            {
                responsivePriority: 1,
                targets: 0
            }{{if .admin}},
            {
                responsivePriority: 2,
                targets: -1
            }{{end}}
        ],
        // DOM ordering settings for DataTables + classes:
        dom: '<"pull-left hidden-xs"B><"visible-xs text-center"B><"pull-right hidden-xs"f><"visible-xs-block"f>ltip',
        // Add export buttons to dataTable (DataTables way).
        // see https://datatables.net/extensions/buttons/examples/initialisation/export :
        buttons: [
            {{if .admin}}
            {
                text: '<i class="fa fa-plus"> New</i>',
                className: 'btn btn-default btn-sm btn-flat',
                action: function (e, dt, node, config) {
                    newAssignment();
                }
            },
            {{end}}
            {
                extend: 'copy', /* https://datatables.net/reference/button/copy */
                className: 'btn btn-default btn-sm btn-flat',
                text: '<i class="fa fa-copy"> Copy</i>',
                exportOptions: {
                    // Avoid 6th column (actions):
                    {{if .admin}}columns: ':not(:last-child)',{{end}}
                    // Export original data (for example, truncated URLs will not be truncated):
                    orthogonal: 'export',
                    // Remove "remaining days" from "date" column + make it not to wrap:
                    format: {
                        body: function (data, row, column, node) {
                            // Remove html tags from title and status columns:
                            if (column === 1) {
                                return data.replace(/\s.+/g, '').replace(/<[^>]+>[^<]*<[^>]+>/g, '').trim();
                            }
                            if (column === 3) {
                                return data.replace(/<[^>]+>/g, '').trim();
                            }
                            if (column === 4) {
                                return data.replace(/<[^>]+>/g, '').trim();
                            }
                            return data.replace(/<[^>]+>[^<]*<[^>]+>/g, '').trim();
                        }
                    }
                }
            },
            {
                extend: 'csv', /* https://datatables.net/reference/button/csv */
                className: 'btn btn-default btn-sm btn-flat',
                text: '<i class="fa fa-download"> CSV</i>',
                filename: 'Assignments',
                exportOptions: {
                    // Avoid 6th column (actions):
                    {{if .admin}}columns: ':not(:last-child)',{{end}}
                    // Export original data (for example, truncated URLs will not be truncated):
                    orthogonal: 'export',
                    // Remove "remaining days" from "date" column + make it not to wrap:
                    format: {
                        body: function (data, row, column, node) {
                            // Remove html tags from title and status columns:
                            if (column === 1) {
                                return data.replace(/\s.+/g, '').replace(/<[^>]+>[^<]*<[^>]+>/g, '').trim();
                            }
                            if (column === 3) {
                                return data.replace(/<[^>]+>/g, '').trim();
                            }
                            if (column === 4) {
                                return data.replace(/<[^>]+>/g, '').trim();
                            }
                            return data.replace(/<[^>]+>[^<]*<[^>]+>/g, '').trim();
                        }
                    }
                }
            },
            {
                extend: 'print', /* https://datatables.net/reference/button/print */
                className: 'btn btn-default btn-sm btn-flat',
                text: '<i class="fa fa-print"> Print</i>',
                exportOptions: {
                    // Avoid 6th column (actions):
                    {{if .admin}}columns: ':not(:last-child)',{{end}}
                    // Export original data (for example, truncated URLs will not be truncated):
                    orthogonal: 'export',
                    // Some tweaks for printing:
                    format: {
                        body: function (data, row, column, node) {
                            // Remove html tags from title and status columns: 
                            if (column === 3) {
                                return data.replace(/<[^>]+>/g, '').trim();
                            }
                            // Remove "remaining days" from "date" column + make it not to wrap:
                            if (column === 1) {
                                return '<span style="white-space: nowrap">' + data.replace(/\s.+/g, '').replace(/<[^>]+>[^<]*<[^>]+>/g, '').trim() + '</span>';
                            }
                            if (column === 4) {
                                return data.replace(/<[^>]+>/g, '').trim();
                            }
                            return data.replace(/<[^>]+>[^<]*<[^>]+>/g, '').trim();
                        }
                    }
                },
                customize: function (win) {
                    // Some styling:
                    $(win.document.body).css('font-size', '9pt');
                    $(win.document.body).find('table')
                            .addClass('compact')
                            .removeClass('nowrap')
                            .css('font-size', 'inherit');
                    $(win.document.body).find('.removeme').remove();
                }
            }
        ]
    });

    {{if .admin}}
    function newAssignment() {
        /******** NOTE: This function is called from DataTables! ********/

        var modal = $('#new-modal');

        var input_title = modal.find('#title');
        var input_until = modal.find('#until');
        var input_subjects = modal.find('#subject');
        var input_description = modal.find('#description');

        input_title.val('');
        input_until.val('');
        input_subjects.val(input_subjects.children(0).attr('value')).change();
        input_description.val('');

        // Display modal:
        modal.modal({ backdrop: 'static' });

        // Focus on input box:
        input_title.focus();

    }

    /************* 'Edit' function *************/
    table.on('click', '.edit-btn:not(.disabled)', function () {
        // Define modal:
        var modal = $('#edit-modal');

        // Define editable (by user) modal form elements:
        var input_title = modal.find('#title');
        var input_until = modal.find('#until');
        var input_subjects = modal.find('#subject');
        var input_description = modal.find('#description');

        // Modal parts:
        var modal_title = modal.find('.modal-title');
        var modal_updated_by = modal.find('#updated_by');
        var modal_updated_on = modal.find('#updated_on');
        var modal_created_by = modal.find('#created_by');
        var modal_created_on = modal.find('#created_on');

        // Prepare modal as "loading, please wait":
        showModalContentLoading(modal);

        // Display modal:
        modal.modal({ backdrop: 'static' });

            // ID of clicked item (row):
            id = $(this).attr('item-id');
            modal.parent().attr('action', '/assignments/' + id);
            $.ajax({
                method: "GET",
                url: '/assignments/' + id,
                dataType: 'json',
                success: function (data) {

                    input_title.val(data.title);
                    input_until.val(data.until);
                    input_subjects.val(data.subject_id).change();
                    input_description.val(data.description);
        
                    // Set modal title:
                    modal_title.html('Editing "<b>' + data.title + '</b>".');
        
                    // Set 'updated by' and 'created by' values:
                    modal_updated_by.html(data.updated_by);
                    modal_updated_on.html(data.updated_on);
                    modal_created_by.html(data.created_by);
                    modal_created_on.html(data.created_on);
        
                    // Show expected modal:
                    showModalContentLoaded(modal);
        
                    // Focus on title input box:
                    input_title.focus();
        
                },
                error: function (request, status, error) {
                    ajaxErrorHandler(request, status, error);
                    showModalContentFailed(modal);
                }
            });
    });
    
    /************* 'Delete' function *************/
        table.on('click', '.delete-btn:not(.disabled)', function () {
            // Define modal:
            var modal = $('#delete-modal');
    
            // Prepare modal as "loading, please wait":
            showModalContentLoading(modal);
            // Display modal:
            modal.modal({ backdrop: 'static' });
            // ID of clicked item (row):
            id = $(this).attr('item-id');
            modal.parent().attr('action', '/assignments/' + id);
            // Fetch JSON formatted data from the server with below URL:
            $.ajax({
                method: "GET",
                url: '/assignments/' + id,
                dataType: 'json',
                success: function (data) {
                    // Set modal content:
                    modal.find('.modal-body.loaded').html('Do you really want to delete assignment <b>' + data.title + '</b>?');
        
                    // Show expected modal:
                    showModalContentLoaded(modal);
                },
                error: function (request, status, error) {
                    ajaxErrorHandler(request, status, error);
                    showModalContentFailed(modal);
                }
            });
        });


    /******************** Form validator ********************/
    validateForm($('#new-form'), "Asssignment has been created!");
    validateForm($('#edit-form'), "Asssignment has been updated!");
    function validateForm(_form, successMessage) {
        _form.validate({
            errorElement: "div",
            errorClass: 'help-block',
            highlight: function (element) {
                $(element).parents().eq(0).addClass("has-error");
            },
            unhighlight: function (element) {
                $(element).parents().eq(0).removeClass("has-error");
            },
            rules: {
                "title": {
                    required: true,
                    maxlength: 60
                },
                "until": { required: true },
                "description": { maxlength: 1000 }
            },
            messages: {
                "title": {
                    required: "You must enter a title!",
                    maxlength: "Title must not be longer than 60 characters!"
                },
                "until": { required: "You must select the deadline date!" },
                "description": { maxlength: "Comment must not be longer than 1000 characters!" }
            },
            submitHandler: function (form) {
                submitAjaxForm(form, successMessage, function () {
                    refreshMenuLabels();
                    $('[href="#assignments"]:first').click(); // Refresh page
                });
                return false; // Prevent further events, since we use ajax.
            }
        });
    }

    // Ajax submit delete form:
    $("#delete-form").submit(function (e) {
        submitAjaxForm(this, "Assignment has been deleted!", function () {
            refreshMenuLabels();
            $('[href="#assignments"]:first').click(); // Refresh page
        });
        return false; // Prevent further events, since we use ajax.
    });

    {{end}}
    
    /************* 'Status' buttons function *************/
    table.on('click', '.status-btn:not(.disabled)', function () {
        // Define modal:
        var modal = $('#status-modal');

        // Define modal elements:
        var input_note = modal.find('#note');
        var modal_title = modal.find('.modal-title');
        var modal_updated_on = modal.find('#updated_on');

        // Prepare modal as "loading, please wait":
        showModalContentLoading(modal);

        // Display modal:
        modal.modal({ backdrop: 'static' });

        // Find assignment ID.
        assignmentID = $(this).attr('item-id');

        // Update form URL:
        modal.parent().attr("action", "/assignment_status/" + assignmentID);

        // Fetch JSON formatted data from the server with below URL:
        $.ajax({
            method: "GET",
            url: "/assignment_status/" + assignmentID,
            dataType: 'json',
            success: function (data) {
                
                // Fill up user editable fields:
                input_note.val(data.assignment_status_note);
                modal.find('[name="status"][value="' + data.assignment_status + '"]').iCheck('check');

                // Set modal title:
                modal_title.html('Personal status of assignment "<b>' + data.assignment_title + '</b> (by ' + data.teacher_name + '. ' + data.teacher_surname + ')".');

                // Set 'updated by' value:
                modal_updated_on.html((data.updated_on == "" ? 'Never updated' : data.updated_on));

                // Show modal with input elements:
                showModalContentLoaded(modal);

                // Focus on input box:
                input_note.focus();
            },
            error: function (request, status, error) {
                ajaxErrorHandler(request, status, error);
                showModalContentFailed();
            }
        });
    });

    /******************** Assignment status Form validator and submit handler ********************/
    $('#status-form').validate({
        errorElement: "div", errorClass: 'help-block',
        highlight: function (element) {
            $(element).parents().eq(0).addClass("has-error");
        },
        unhighlight: function (element) {
            $(element).parents().eq(0).removeClass("has-error");
        },
        rules: {
            "note": { maxlength: 1000 }
        },
        messages: {
            "note": { maxlength: "Personal note must not be longer than 1000 characters!" }
        },
        submitHandler: function (form) {
            successMessage = "Personal status has been updated!";
            submitAjaxForm(form, successMessage, function () {
                refreshActiveSubjectsContainer() // Refresh menu labels
                $('[href="#assignments"]:first').click(); // Refresh page
            })
            return false; // Prevent further events, since we use ajax.
        }
    });

</script>